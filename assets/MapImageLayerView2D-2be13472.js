import{F as r,G as o,bL as g,H as m,x as l,C as d,E as u,J as c}from"./index-12a23f8f.js";import{a as y}from"./BitmapContainer-7f270bf5.js";import{m as f,u as x}from"./LayerView-12613381.js";import{r as w}from"./GraphicsView2D-98e7dd6d.js";import{a as _}from"./HighlightGraphicContainer-2464b8a9.js";import{v}from"./ExportStrategy-572ed08c.js";import{m as H}from"./ExportImageParameters-a6c9e737.js";import{a as I}from"./RefreshableLayerView-29df7f53.js";import{G as V,r as P}from"./drapedUtils-9fb6ffda.js";import"./WGLContainer-61563beb.js";import"./definitions-81a14670.js";import"./FramebufferObject-eafad06d.js";import"./Texture-112dea01.js";import"./enums-bdecffa2.js";import"./ProgramTemplate-d6dd973d.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-64e9e29b.js";import"./enums-f1a6a48a.js";import"./GeometryUtils-dd49d312.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./Container-32966a35.js";import"./earcut-930b2254.js";import"./featureConversionUtils-6e3aaf33.js";import"./OptimizedGeometry-d94e541f.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./scaleUtils-dff3c467.js";import"./ExpandedCIM-f92b0e9f.js";import"./BidiEngine-9a40f2f4.js";import"./visualVariablesUtils-90c2aed5.js";import"./GeometryUtils-984e8446.js";import"./utils-9fb68141.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-84e07faa.js";import"./floatRGBA-c851a2c2.js";import"./normalizeUtilsSync-2e514ea8.js";import"./projectionSupport-75a8a90e.js";import"./json-48e3ea08.js";import"./AttributeStoreView-31552075.js";import"./TiledDisplayObject-f5f785fe.js";import"./util-9f2f1fb1.js";import"./Matcher-8d3f91b8.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-df5ed9f4.js";import"./ComputedAttributeStorage-9f1e4ccf.js";import"./TimeOnly-09aefee7.js";import"./BaseGraphicContainer-7af58a16.js";import"./FeatureContainer-074590b8.js";import"./TileContainer-83f45892.js";import"./vec3f32-2da9db36.js";import"./Bitmap-4c7f0f15.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-e72fe95d.js";import"./popupUtils-08e4cacb.js";const U=t=>{let e=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var i;return((i=this.view)==null?void 0:i.floors)??null}get exportImageVersion(){var i;return(i=this.exportImageParameters)==null||i.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return r([o()],e.prototype,"exportImageParameters",void 0),r([o({readOnly:!0})],e.prototype,"floors",null),r([o({readOnly:!0})],e.prototype,"exportImageVersion",null),r([o()],e.prototype,"layer",void 0),r([o()],e.prototype,"suspended",void 0),r([o(g)],e.prototype,"timeExtent",void 0),e=r([m("esri.views.layers.MapImageLayerView")],e),e};let s=class extends U(I(f(x))){constructor(){super(...arguments),this._highlightGraphics=new l,this._updateHash=""}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(i=>{d(i)||u.getLogger(this).error(i)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:i}=this.layer,a=i>=10.3,n=i>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new w({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new _(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(p,h)=>P(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new v({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:a,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(c(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,a){return this.layer.fetchImage(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...a})}fetchImageBitmap(t,e,i,a){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...a})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([o()],s.prototype,"strategy",void 0),r([o()],s.prototype,"updating",void 0),s=r([m("esri.views.2d.layers.MapImageLayerView2D")],s);const bt=s;export{bt as default};
