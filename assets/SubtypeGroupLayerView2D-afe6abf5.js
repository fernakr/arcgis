import{F as m,H as d,J as u,P as y,a1 as h,a2 as c}from"./index-2cba8b26.js";import b from"./FeatureLayerView2D-3682ca06.js";import"./definitions-fc68b3c7.js";import"./LayerView-f21e9595.js";import"./Container-c2f43eb3.js";import"./enums-bdecffa2.js";import"./Texture-1a2643de.js";import"./AttributeStoreView-3c8a3bd0.js";import"./TiledDisplayObject-eb6159a0.js";import"./color-fba6d386.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./number-e491b09e.js";import"./WGLContainer-3f66cfee.js";import"./FramebufferObject-09a007e5.js";import"./ProgramTemplate-280f5283.js";import"./GeometryUtils-144558c8.js";import"./alignmentUtils-ae955d28.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-563a1416.js";import"./featureConversionUtils-0a1f3a04.js";import"./OptimizedFeature-e90b69df.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./OptimizedGeometry-196224d4.js";import"./visualVariablesUtils-b04dafc6.js";import"./cimAnalyzer-27a11460.js";import"./fontUtils-fe60fee5.js";import"./BidiEngine-9a40f2f4.js";import"./labelPoint-7ee10cc6.js";import"./GeometryUtils-984e8446.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-6148d1eb.js";import"./floatRGBA-a22bfffe.js";import"./ExpandedCIM-ce44cfc1.js";import"./util-763d06a1.js";import"./BitmapTileContainer-1194f2c5.js";import"./Bitmap-40569076.js";import"./TileContainer-d922dd86.js";import"./CircularArray-ef508845.js";import"./BufferPool-c0e6afc6.js";import"./FeatureContainer-4cc1a438.js";import"./popupUtils-0c9b011b.js";import"./RefreshableLayerView-3ab50592.js";function g(i,e){return!i.visible||i.minScale!==0&&e>i.minScale||i.maxScale!==0&&e<i.maxScale}let n=class extends b{initialize(){this.addHandles([u(()=>this.view.scale,()=>this._update(),y)],"constructor")}isUpdating(){var p;const i=this.layer.sublayers.some(l=>l.renderer!=null),e=this._commandsQueue.updating,s=this._updatingRequiredFieldsPromise!=null,t=!this._proxy||!this._proxy.isReady,r=this._pipelineIsUpdating,o=this.tileRenderer==null||((p=this.tileRenderer)==null?void 0:p.updating),a=i&&(e||s||t||r||o);return h("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${a}
  -> hasRenderer ${i}
  -> hasPendingCommand ${e}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${t}
  -> updatingPipeline ${r}
  -> updatingTileRenderer ${o}
`),a}_injectOverrides(i){let e=super._injectOverrides(i);const s=this.view.scale,t=this.layer.sublayers.filter(o=>g(o,s)).map(o=>o.subtypeCode);if(!t.length)return e;e=e??new c().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return e.where=e.where?`(${e.where}) AND (${r})`:r,e}_setLayersForFeature(i){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),s=i.attributes[e.name],t=this.layer.sublayers.find(r=>r.subtypeCode===s);i.layer=i.sourceLayer=t}_createSchemaConfig(){const i={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(r=>r.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...i,definitionExpression:t}}};n=m([d("esri.views.2d.layers.SubtypeGroupLayerView2D")],n);const pe=n;export{pe as default};
