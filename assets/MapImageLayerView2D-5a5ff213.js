import{F as r,G as o,eL as g,H as m,dY as l,x as d,C as u,E as c,J as y}from"./index-e88387f3.js";import{a as f}from"./BitmapContainer-d0169d3f.js";import{m as x,u as w}from"./LayerView-2bbefb29.js";import{r as _}from"./GraphicsView2D-77e3e981.js";import{a as v}from"./HighlightGraphicContainer-59c01b11.js";import{v as H}from"./ExportStrategy-e3c608d5.js";import{a as I}from"./RefreshableLayerView-8526b31a.js";import{G as V,r as P}from"./drapedUtils-2d9571bd.js";import"./WGLContainer-dd32c3b7.js";import"./definitions-1a0e2008.js";import"./FramebufferObject-ed33cce4.js";import"./Texture-827b9aaa.js";import"./enums-bdecffa2.js";import"./ProgramTemplate-da7f9006.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-10797745.js";import"./enums-f1a6a48a.js";import"./number-e491b09e.js";import"./GeometryUtils-cf666b71.js";import"./alignmentUtils-ae955d28.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./Container-36c05c87.js";import"./earcut-ee9358e2.js";import"./featureConversionUtils-4c659ed1.js";import"./OptimizedFeature-e90b69df.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./OptimizedGeometry-196224d4.js";import"./cimAnalyzer-a10249d4.js";import"./fontUtils-42144027.js";import"./BidiEngine-9a40f2f4.js";import"./labelPoint-074eea2c.js";import"./GeometryUtils-984e8446.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-a0dc59e7.js";import"./floatRGBA-51fb6cf9.js";import"./normalizeUtilsSync-d3ab1153.js";import"./projectionSupport-ff24c0cb.js";import"./json-48e3ea08.js";import"./AttributeStoreView-0568c808.js";import"./TiledDisplayObject-32b04012.js";import"./visualVariablesUtils-00a07529.js";import"./ExpandedCIM-9cfbdbef.js";import"./util-c018a817.js";import"./Matcher-5351db63.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-c1ad9b97.js";import"./ComputedAttributeStorage-f9415bae.js";import"./TimeOnly-d896b5c5.js";import"./BaseGraphicContainer-b74b9457.js";import"./FeatureContainer-1b758af7.js";import"./TileContainer-29f9b11c.js";import"./vec3f32-2da9db36.js";import"./Bitmap-6916d168.js";import"./popupUtils-1ff95f49.js";const U=t=>{let e=class extends t{initialize(){this.exportImageParameters=new l({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var i;return((i=this.view)==null?void 0:i.floors)??null}get exportImageVersion(){var i;return(i=this.exportImageParameters)==null||i.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return r([o()],e.prototype,"exportImageParameters",void 0),r([o({readOnly:!0})],e.prototype,"floors",null),r([o({readOnly:!0})],e.prototype,"exportImageVersion",null),r([o()],e.prototype,"layer",void 0),r([o()],e.prototype,"suspended",void 0),r([o(g)],e.prototype,"timeExtent",void 0),e=r([m("esri.views.layers.MapImageLayerView")],e),e};let s=class extends U(I(x(w))){constructor(){super(...arguments),this._highlightGraphics=new d,this._updateHash=""}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(i=>{u(i)||c.getLogger(this).error(i)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:i}=this.layer,a=i>=10.3,n=i>=10;this._bitmapContainer=new f,this.container.addChild(this._bitmapContainer),this._highlightView=new _({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(p,h)=>P(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new H({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:a,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(y(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,a){return this.layer.fetchImage(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...a})}fetchImageBitmap(t,e,i,a){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...a})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([o()],s.prototype,"strategy",void 0),r([o()],s.prototype,"updating",void 0),s=r([m("esri.views.2d.layers.MapImageLayerView2D")],s);const Et=s;export{Et as default};
