import{b2 as Se,hM as M,c1 as ge,hN as ve,hO as ce,hP as be,hQ as Be,hR as Ne,ad as Ie,hS as Pe,E as Re,A as a,B as m,hT as R,C as H,by as ye,dG as $,dE as z,dH as _e,V as P,z as De,du as Ce,dy as Le,dw as Te,dx as $e,dz as Oe,f as F,T as Fe,ea as xe,aT as ke,aS as Ae,cN as oe,aG as ie,hU as Je,s as D,I as Ge,S as Ee,j as Me,g as je,hV as se,v as qe,g9 as We,K as ze,F as Ue,bx as Ve,bw as _,au as Ke,bc as He,hW as Qe,dI as Ze}from"./index-308e373b.js";import{i as Ye}from"./originUtils-cfe4feaf.js";import{m as G,c as E,C as x,T as k,j as A,O as J,S as j,a as Xe}from"./Stop-60dba5fb.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";function q(e){return e instanceof Re}async function et(e,t,r){const i=[],s=[],l={},u={},y=Se(e),{path:w}=y;q(t.stops)&&M(t.stops.features,s,"stops.features",l),q(t.pointBarriers)&&M(t.pointBarriers.features,s,"pointBarriers.features",l),q(t.polylineBarriers)&&M(t.polylineBarriers.features,s,"polylineBarriers.features",l),q(t.polygonBarriers)&&M(t.polygonBarriers.features,s,"polygonBarriers.features",l);const S=await ge(s);for(const v in l){const b=l[v];i.push(v),u[v]=S.slice(b[0],b[1])}if(ve(u,i)){let v=null;try{v=await ce(w,t.apiKey,r)}catch{}v&&!v.hasZ&&be(u,i)}for(const v in u)u[v].forEach((b,B)=>{Be(t,v)[B].geometry=b});const p={...r,query:{...y.query,...Ne(t),f:"json"}},g=w.endsWith("/solve")?w:`${w}/solve`,{data:N}=await Ie(g,p);return tt(N)}function tt(e){const{barriers:t,directionLines:r,directionPoints:i,directions:s,messages:l,polygonBarriers:u,polylineBarriers:y,routes:w,stops:S,traversedEdges:p,traversedJunctions:g,traversedTurns:N}=e,v=o=>{const h=B.find(I=>I.routeName===o);if(h!=null)return h;const f={routeId:B.length+1,routeName:o};return B.push(f),f},b=o=>{const h=B.find(I=>I.routeId===o);if(h!=null)return h;const f={routeId:o,routeName:null};return B.push(f),f},B=[];w==null||w.features.forEach((o,h)=>{o.geometry.spatialReference=w.spatialReference??void 0;const f=o.attributes.Name,I=h+1;B.push({routeId:I,routeName:f,route:o})}),s==null||s.forEach(o=>{const{routeName:h}=o;v(h).directions=o});const c=((S==null?void 0:S.features.every(o=>o.attributes.RouteName==null))??!1)&&B.length>0?B[0].routeName:null;return S==null||S.features.forEach(o=>{var I;o.geometry&&((I=o.geometry).spatialReference??(I.spatialReference=S.spatialReference??void 0));const h=c??o.attributes.RouteName,f=v(h);f.stops??(f.stops=[]),f.stops.push(o)}),r==null||r.features.forEach(o=>{const h=o.attributes.RouteID,f=b(h),{geometryType:I,spatialReference:L}=r;f.directionLines??(f.directionLines={features:[],geometryType:I,spatialReference:L}),f.directionLines.features.push(o)}),i==null||i.features.forEach(o=>{const h=o.attributes.RouteID,f=b(h),{geometryType:I,spatialReference:L}=i;f.directionPoints??(f.directionPoints={features:[],geometryType:I,spatialReference:L}),f.directionPoints.features.push(o)}),p==null||p.features.forEach(o=>{const h=o.attributes.RouteID,f=b(h),{geometryType:I,spatialReference:L}=p;f.traversedEdges??(f.traversedEdges={features:[],geometryType:I,spatialReference:L}),f.traversedEdges.features.push(o)}),g==null||g.features.forEach(o=>{const h=o.attributes.RouteID,f=b(h),{geometryType:I,spatialReference:L}=g;f.traversedJunctions??(f.traversedJunctions={features:[],geometryType:I,spatialReference:L}),f.traversedJunctions.features.push(o)}),N==null||N.features.forEach(o=>{const h=o.attributes.RouteID,f=b(h);f.traversedTurns??(f.traversedTurns={features:[]}),f.traversedTurns.features.push(o)}),Pe.fromJSON({routeResults:B,barriers:t,polygonBarriers:u,polylineBarriers:y,messages:l})}let T=class extends ye{constructor(e){super(e),this.break=new $({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.first=new $({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.unlocated=new $({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.last=new $({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.middle=new $({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.waypoint=new $({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};a([m({types:R})],T.prototype,"break",void 0),a([m({types:R})],T.prototype,"first",void 0),a([m({types:R})],T.prototype,"unlocated",void 0),a([m({types:R})],T.prototype,"last",void 0),a([m({types:R})],T.prototype,"middle",void 0),a([m({types:R})],T.prototype,"waypoint",void 0),T=a([H("esri.layers.support.RouteStopSymbols")],T);const fe=T;let C=class extends ye{constructor(e){super(e),this.directionLines=new z({color:[0,122,194],width:6}),this.directionPoints=new $({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new $({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new _e({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new z({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new z({width:8,color:[20,89,127]}),this.stops=new fe}};a([m({types:R})],C.prototype,"directionLines",void 0),a([m({types:R})],C.prototype,"directionPoints",void 0),a([m({types:R})],C.prototype,"pointBarriers",void 0),a([m({types:R})],C.prototype,"polygonBarriers",void 0),a([m({types:R})],C.prototype,"polylineBarriers",void 0),a([m({types:R})],C.prototype,"routeInfo",void 0),a([m({type:fe})],C.prototype,"stops",void 0),C=a([H("esri.layers.support.RouteSymbols")],C);const de=C;function U(e){return e.length?e:null}function K(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:K("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:K("esriGeometryPolyline")}}}function W(e){return"layers"in e}function rt(e){return e.declaredClass==="esri.rest.support.FeatureSet"}function ot(e){return e.declaredClass==="esri.rest.support.NetworkFeatureSet"}function it(e,t,r){var Q,Z,Y,X,ee,te;const i=(Q=t.networkDataset)==null?void 0:Q.networkAttributes,s=(i==null?void 0:i.filter(({usageType:n})=>n==="cost"))??[],l=r.travelMode??t.defaultTravelMode;if(l==null)return void he.warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:u,distanceAttributeName:y}=l,w=s.find(({name:n})=>n===u),S=s.find(({name:n})=>n===y),p=((Z=r.travelMode)==null?void 0:Z.impedanceAttributeName)??r.impedanceAttribute??t.impedance,g=w==null?void 0:w.units,N=S==null?void 0:S.units;if(!g||!N)throw new D("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const v=r.directionsLanguage??t.directionsLanguage,b=r.accumulateAttributes??t.accumulateAttributeNames??[],B=new Set(s.filter(({name:n})=>n===u||n===y||n===p||n!=null&&b.includes(n)).map(({name:n})=>n)),c=n=>{for(const re in n)B.has(re)||delete n[re]};for(const n of e.pointBarriers)n.costs!=null&&(n.addedCost=n.costs[p]??0,c(n.costs));for(const n of e.polygonBarriers)n.costs!=null&&(n.scaleFactor=n.costs[p]??1,c(n.costs));for(const n of e.polylineBarriers)n.costs!=null&&(n.scaleFactor=n.costs[p]??1,c(n.costs));const{routeInfo:o}=e,{findBestSequence:h,preserveFirstStop:f,preserveLastStop:I,startTimeIsUTC:L,timeWindowsAreUTC:we}=r;o.analysisSettings=new Xe({accumulateAttributes:b,directionsLanguage:v,findBestSequence:h,preserveFirstStop:f,preserveLastStop:I,startTimeIsUTC:L,timeWindowsAreUTC:we,travelMode:l}),o.totalDuration=O(((Y=o.totalCosts)==null?void 0:Y[u])??0,g),o.totalDistance=V(((X=o.totalCosts)==null?void 0:X[y])??0,N),o.totalLateDuration=O(((ee=o.totalViolations)==null?void 0:ee[u])??0,g),o.totalWaitDuration=O(((te=o.totalWait)==null?void 0:te[u])??0,g),o.totalCosts!=null&&c(o.totalCosts),o.totalViolations!=null&&c(o.totalViolations),o.totalWait!=null&&c(o.totalWait);for(const n of e.stops)n.serviceCosts!=null&&(n.serviceDuration=O(n.serviceCosts[u]??0,g),n.serviceDistance=V(n.serviceCosts[y]??0,N),c(n.serviceCosts)),n.cumulativeCosts!=null&&(n.cumulativeDuration=O(n.cumulativeCosts[u]??0,g),n.cumulativeDistance=V(n.cumulativeCosts[y]??0,N),c(n.cumulativeCosts)),n.violations!=null&&(n.lateDuration=O(n.violations[u]??0,g),c(n.violations)),n.wait!=null&&(n.waitDuration=O(n.wait[u]??0,g),c(n.wait))}async function ne(e){const t=F.WGS84;return await Ke(e.spatialReference,t),He(e,t)}function O(e,t){switch(t){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function V(e,t){return t==="decimal-degrees"||t==="points"||t==="unknown"?e:Qe(e,t,"meters")}function st(e){const{attributes:t,geometry:r,popupTemplate:i,symbol:s}=e.toGraphic().toJSON();return{attributes:t,geometry:r,popupInfo:i,symbol:s}}const nt=P.ofType(G),at=P.ofType(E),ae=P.ofType(x),le=P.ofType(k),ue=P.ofType(A),pe=P.ofType(J),me="esri.layers.RouteLayer",he=De.getLogger(me);let d=class extends Ce(Le(Te($e(Oe(Ze))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new de,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new ae,this.polygonBarriers=new le,this.polylineBarriers=new ue,this.routeInfo=null,this.spatialReference=F.WGS84,this.stops=new pe,this.type="route";const t=()=>{this._setStopSymbol(this.stops)};this.addHandles(Fe(()=>this.stops,"change",t,{sync:!0,onListenerAdd:t}))}writeFeatureCollectionWebmap(e,t,r,i){const s=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter(y=>!!y),l=s.map((y,w)=>w),u=i.origin==="web-map"?"featureCollection.layers":"layers";xe(u,s,t),t.opacity=this.opacity,t.visibility=this.visible,t.visibleLayers=l}readDirectionLines(e,t){return this._getNetworkFeatures(t,"DirectionLines",r=>G.fromGraphic(r))}readDirectionPoints(e,t){return this._getNetworkFeatures(t,"DirectionPoints",r=>E.fromGraphic(r))}get fullExtent(){var s;const e=new ke({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:F.WGS84});if(((s=this.routeInfo)==null?void 0:s.geometry)!=null)return this.routeInfo.geometry.extent??e;if(this.stops==null)return e;const t=this.stops.filter(l=>l.geometry!=null);if(t.length<2)return e;const{spatialReference:r}=t.at(0).geometry;if(r==null)return e;const i=t.toArray().map(l=>{const u=l.geometry;return[u.x,u.y]});return new Ae({points:i,spatialReference:r}).extent}readMaxScale(e,t){var s;const r=W(t)?t.layers:(s=t.featureCollection)==null?void 0:s.layers,i=r==null?void 0:r.find(l=>l.layerDefinition.maxScale!=null);return(i==null?void 0:i.layerDefinition.maxScale)??0}readMinScale(e,t){var s;const r=W(t)?t.layers:(s=t.featureCollection)==null?void 0:s.layers,i=r==null?void 0:r.find(l=>l.layerDefinition.minScale!=null);return(i==null?void 0:i.layerDefinition.minScale)??0}readPointBarriers(e,t){return this._getNetworkFeatures(t,"Barriers",r=>x.fromGraphic(r))}readPolygonBarriers(e,t){return this._getNetworkFeatures(t,"PolygonBarriers",r=>k.fromGraphic(r))}readPolylineBarriers(e,t){return this._getNetworkFeatures(t,"PolylineBarriers",r=>A.fromGraphic(r))}readRouteInfo(e,t){const r=this._getNetworkFeatures(t,"RouteInfo",i=>j.fromGraphic(i));return r.length>0?r.at(0):null}readSpatialReference(e,t){var y,w;const r=W(t)?t.layers:(y=t.featureCollection)==null?void 0:y.layers;if(!(r!=null&&r.length))return F.WGS84;const{layerDefinition:i,featureSet:s}=r[0],l=s.features[0],u=((w=l==null?void 0:l.geometry)==null?void 0:w.spatialReference)??s.spatialReference??i.spatialReference??i.extent.spatialReference??oe;return F.fromJSON(u)}readStops(e,t){return this._getNetworkFeatures(t,"Stops",r=>J.fromGraphic(r),r=>this._setStopSymbol(r))}get title(){var e;return((e=this.routeInfo)==null?void 0:e.name)!=null?this.routeInfo.name:"Route"}set title(e){this._overrideIfSome("title",e)}get url(){return ie.routeServiceUrl}set url(e){e!=null?this._set("url",Je(e,he)):this._set("url",ie.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){this.directionLines!=null&&(this.directionLines.removeAll(),this._set("directionLines",null)),this.directionPoints!=null&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),this.routeInfo!=null&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:t}=this;if(!t)throw new D("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!t.id)throw new D("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if(t.type!=="Feature Collection")throw new D("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(this.routeInfo==null)throw new D("routelayer:route-unsolved","save() requires a solved route");const{portal:r}=t;await r.signIn(),r.user||await t.reload();const{itemUrl:i,itemControl:s}=t;if(s!=="admin"&&s!=="update")throw new D("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const l={messages:[],origin:"portal-item",portal:r,url:i?Ge(i):void 0,writtenProperties:[]},u=this.write(void 0,l);return t.extent=await ne(e),t.title=this.title,await t.update({data:u}),t}async saveAs(e,t={}){var y;if(await this.load(),this.routeInfo==null)throw new D("routelayer:route-unsolved","saveAs() requires a solved route");const r=Ee.from(e).clone();r.extent??(r.extent=await ne(this.fullExtent)),r.id=null,r.portal??(r.portal=Me.getDefault()),r.title??(r.title=this.title),r.type="Feature Collection",r.typeKeywords=["Data","Feature Collection",je.MULTI_LAYER,"Route Layer"];const{portal:i}=r,s={messages:[],origin:"portal-item",portal:i,url:null,writtenProperties:[]};await i.signIn();const l=t==null?void 0:t.folder,u=this.write(void 0,s);return await((y=i.user)==null?void 0:y.addItem({item:r,folder:l,data:u})),this.portalItem=r,Ye(s),s.portalItem=r,r}async solve(e,t){const r=(e==null?void 0:e.stops)??this.stops,i=(e==null?void 0:e.pointBarriers)??U(this.pointBarriers),s=(e==null?void 0:e.polylineBarriers)??U(this.polylineBarriers),l=(e==null?void 0:e.polygonBarriers)??U(this.polygonBarriers);if(r==null)throw new D("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((rt(r)||ot(r))&&r.features.length<2||P.isCollection(r)&&r.length<2)throw new D("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(P.isCollection(r))for(const c of r)c.routeName=null;const u=e==null?void 0:e.apiKey,y=this.url,w=await this._getServiceDescription(y,u,t),S=(e==null?void 0:e.travelMode)??w.defaultTravelMode,p=(e==null?void 0:e.accumulateAttributes)??[];S!=null&&(p.push(S.distanceAttributeName),S.timeAttributeName&&p.push(S.timeAttributeName));const g={startTime:new Date},N={accumulateAttributes:p,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:i,polylineBarriers:s,polygonBarriers:l,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!i,returnDirections:!0,returnPolygonBarriers:!!l,returnPolylineBarriers:!!s,returnRoutes:!0,returnStops:!0,stops:r},v=e?se.from(e):new se;for(const c in g)v[c]==null&&(v[c]=g[c]);let b;v.set(N);try{b=await et(y,v,t)}catch(c){throw qe(c)?c:new D("routelayer:failed-route-request","the routing request failed",{error:c})}const B=this._toRouteLayerSolution(b);return this._isOverridden("title")||(this.title=B.routeInfo.name??"Route"),it(B,w,v),B}update(e){const{stops:t,directionLines:r,directionPoints:i,pointBarriers:s,polylineBarriers:l,polygonBarriers:u,routeInfo:y}=e;this.set({stops:t,pointBarriers:s,polylineBarriers:l,polygonBarriers:u}),this._set("directionLines",r),this._set("directionPoints",i),this._set("routeInfo",y),y.geometry!=null&&(this.spatialReference=y.geometry.spatialReference)}_getNetworkFeatures(e,t,r,i){var B;const s=W(e)?e.layers:(B=e.featureCollection)==null?void 0:B.layers,l=s==null?void 0:s.find(c=>c.layerDefinition.name===t);if(l==null)return new P;const{layerDefinition:u,popupInfo:y,featureSet:w}=l,S=u.drawingInfo.renderer,{features:p}=w,g=w.spatialReference??u.spatialReference??u.extent.spatialReference??oe,N=S&&We(S),v=F.fromJSON(g),b=p.map(c=>{const o=ze.fromJSON(c);o.geometry!=null&&c.geometry!=null&&c.geometry.spatialReference==null&&(o.geometry.spatialReference=v);const h=r(o);return h.symbol??(h.symbol=(N==null?void 0:N.getSymbol(o))??this._getNetworkSymbol(t)),h.popupTemplate??(h.popupTemplate=y&&Ue.fromJSON(y)),h});return i&&b.some(c=>!c.symbol)&&i(b),new P(b)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,t,r){if(this._cachedServiceDescription!=null&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const i=await ce(e,t,r);return this._cachedServiceDescription={serviceDescription:i,url:e},i}_setStopSymbol(e){if(!e||e.length===0||this.defaultSymbols.stops==null||e.every(({symbol:p})=>p!=null))return;const{first:t,last:r,middle:i,unlocated:s,waypoint:l,break:u}=this.defaultSymbols.stops;if(this.routeInfo==null||e.length===1)return void e.forEach((p,g)=>{switch(g){case 0:p.symbol=t;break;case e.length-1:p.symbol=r;break;default:p.symbol=i}});const y=e.map(({sequence:p})=>p).filter(p=>p!=null),w=Math.min(...y),S=Math.max(...y);for(const p of e)p.sequence!==w?p.sequence!==S?p.status==="ok"||p.status==="not-located-on-closest"?p.locationType!=="waypoint"?p.locationType!=="break"?p.symbol=i:p.symbol=u:p.symbol=l:p.symbol=s:p.symbol=r:p.symbol=t}_toRouteLayerSolution(e){var S,p,g,N,v,b,B;const t=(S=e.routeResults[0].stops)==null?void 0:S.map(c=>J.fromJSON(c.toJSON()));this._setStopSymbol(t);const r=new pe(t),i=new le((p=e.polygonBarriers)==null?void 0:p.map(c=>{const o=k.fromJSON(c.toJSON());return o.symbol=this.defaultSymbols.polygonBarriers,o})),s=new ue((g=e.polylineBarriers)==null?void 0:g.map(c=>{const o=A.fromJSON(c.toJSON());return o.symbol=this.defaultSymbols.polylineBarriers,o})),l=new ae((N=e.pointBarriers)==null?void 0:N.map(c=>{const o=x.fromJSON(c.toJSON());return o.symbol=this.defaultSymbols.pointBarriers,o})),u=(v=e.routeResults[0].route)==null?void 0:v.toJSON(),y=j.fromJSON(u);y.symbol=this.defaultSymbols.routeInfo;const w=new at((b=e.routeResults[0].directionPoints)==null?void 0:b.features.map(c=>{const o=E.fromJSON(c.toJSON());return o.symbol=this.defaultSymbols.directionPoints,o}));return{directionLines:new nt((B=e.routeResults[0].directionLines)==null?void 0:B.features.map(c=>{const o=G.fromJSON(c.toJSON());return o.symbol=this.defaultSymbols.directionLines,o})),directionPoints:w,pointBarriers:l,polygonBarriers:i,polylineBarriers:s,routeInfo:y,stops:r}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",G.fields,G.popupInfo,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",E.fields,E.popupInfo,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,t,r,i,s,l,u){if(!(e!=null&&e.length))return null;const y=this.spatialReference.toJSON(),{fullExtent:w,maxScale:S,minScale:p}=this;return{featureSet:{features:e.toArray().map(g=>st(g)),geometryType:r,spatialReference:y},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:t!=null?t.toJSON():K(r)}},extent:w.toJSON(),fields:i,geometryType:r,hasM:!1,hasZ:!1,maxScale:S,minScale:p,name:l,objectIdField:"ObjectID",spatialReference:y,title:u,type:"Feature Layer",typeIdField:""},popupInfo:s}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",x.fields,x.popupInfo,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",k.fields,k.popupInfo,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",A.fields,A.popupInfo,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(this.routeInfo!=null?new P([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",j.fields,j.popupInfo,"RouteInfo","Route Details")}_writeStops(){var l,u,y;const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",J.fields,J.popupInfo,"Stops","Stops");if(e==null)return null;const{stops:t}=this.defaultSymbols,r=(l=t==null?void 0:t.first)==null?void 0:l.toJSON(),i=(u=t==null?void 0:t.middle)==null?void 0:u.toJSON(),s=(y=t==null?void 0:t.last)==null?void 0:y.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:i,uniqueValueInfos:[{value:"1",symbol:r,label:"First Stop"},{value:`${this.stops.length}`,symbol:s,label:"Last Stop"}]},e}};a([m({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:this.portalItem==null}}}}}}})],d.prototype,"_featureCollection",void 0),a([Ve(["web-map","portal-item"],"_featureCollection")],d.prototype,"writeFeatureCollectionWebmap",null),a([m({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:this.portalItem!=null}}}}}}})],d.prototype,"_type",void 0),a([m({nonNullable:!0,type:de})],d.prototype,"defaultSymbols",void 0),a([m({readOnly:!0})],d.prototype,"directionLines",void 0),a([_(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],d.prototype,"readDirectionLines",null),a([m({readOnly:!0})],d.prototype,"directionPoints",void 0),a([_(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],d.prototype,"readDirectionPoints",null),a([m({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],d.prototype,"featureCollectionType",void 0),a([m({readOnly:!0})],d.prototype,"fullExtent",null),a([m({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],d.prototype,"legendEnabled",void 0),a([m({type:["show","hide"]})],d.prototype,"listMode",void 0),a([m({type:Number,nonNullable:!0,json:{write:!1}})],d.prototype,"maxScale",void 0),a([_(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],d.prototype,"readMaxScale",null),a([m({type:Number,nonNullable:!0,json:{write:!1}})],d.prototype,"minScale",void 0),a([_(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],d.prototype,"readMinScale",null),a([m({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],d.prototype,"operationalLayerType",void 0),a([m({nonNullable:!0,type:P.ofType(x)})],d.prototype,"pointBarriers",void 0),a([_(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],d.prototype,"readPointBarriers",null),a([m({nonNullable:!0,type:P.ofType(k)})],d.prototype,"polygonBarriers",void 0),a([_(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],d.prototype,"readPolygonBarriers",null),a([m({nonNullable:!0,type:P.ofType(A)})],d.prototype,"polylineBarriers",void 0),a([_(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],d.prototype,"readPolylineBarriers",null),a([m({readOnly:!0})],d.prototype,"routeInfo",void 0),a([_(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],d.prototype,"readRouteInfo",null),a([m({type:F})],d.prototype,"spatialReference",void 0),a([_(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],d.prototype,"readSpatialReference",null),a([m({nonNullable:!0,type:P.ofType(J)})],d.prototype,"stops",void 0),a([_(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],d.prototype,"readStops",null),a([m()],d.prototype,"title",null),a([m({readOnly:!0,json:{read:!1}})],d.prototype,"type",void 0),a([m()],d.prototype,"url",null),d=a([H(me)],d);const yt=d;export{yt as default};
